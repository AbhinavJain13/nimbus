<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.0.xsd
http://cxf.apache.org/jaxrs
http://cxf.apache.org/schemas/jaxrs.xsd">

    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-extension-jaxrs-binding.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

    <jaxrs:server id="elasticQueryServer"
                  address="/">
        <jaxrs:serviceBeans>
            <ref bean="elasticQuery"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="org.nimbustools.messaging.query.AxisBodyWriter"/>
            <ref bean="queryExceptionMapper"/>
        </jaxrs:providers>
    </jaxrs:server>

    <bean id="queryExceptionMapper" class="org.nimbustools.messaging.query.QueryExceptionMapper"/>

    <bean id="queryExceptionTranslationFilter"
          class="org.nimbustools.messaging.query.security.QueryExceptionTranslationFilter">
        <property name="exceptionMapper" ref="queryExceptionMapper"/>
    </bean>

    <bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map path-type="ant">
            <security:filter-chain pattern="/**" filters="
            queryExceptionTranslationFilter,
            queryAuthenticationFilter
            " />
        </security:filter-chain-map>
    </bean>
    <bean id="queryAuthenticationFilter" class="org.nimbustools.messaging.query.security.QueryAuthenticationFilter">
        <property name="userDetailsService" ref="userDetailsService"/>
    </bean>

    <bean id="other.AuthzDataSource"
         class="org.apache.commons.dbcp.BasicDataSource">
       <property name="driverClassName" value="org.sqlite.JDBC" />
       <property name="maxActive" value="10" />
       <property name="maxIdle" value="4" />
       <property name="maxWait" value="2000" />
       <property name="poolPreparedStatements" value="true" />

       <property name="url"
                 value="jdbc:sqlite://$CUMULUS{cumulus.authz.db}" />
       <property name="username" value="nimbus"/>
       <property name="password" value="nimbus"/>
   </bean>

    <bean id="authzDBAdapter" class="org.nimbus.authz.AuthzDBAdapter">
        <constructor-arg ref="other.AuthzDataSource"/>

        <property name="cumulusPublicUser" value="$CUMULUS{cumulus.publicuser}" />
    </bean>

    <bean id="userDetailsService" class="org.nimbustools.messaging.query.security.NimbusAuthzUserDetailsService">
        <property name="authzDBAdapter" ref="authzDBAdapter" />
    </bean>

    <bean id="elasticQuery" class="org.nimbustools.messaging.query.ElasticQuery">
        <!-- These values are bean IDs in the elastic Spring context -->
        <property name="versions">
            <map>
                <entry key="2009-08-15"  value="query_2009-08-15" />
            </map>
        </property>

        <!-- we only support a single API version for the moment,
        but there is general compatility with most recent versions -->
        <property name="fallbackVersion" value="query_2009-08-15"/>
    </bean>

    <bean id="nimbus-query.rm.containerInterface"
          class="org.nimbustools.messaging.query.security.QueryContainerInterface">
        <constructor-arg ref="nimbus-query.rm.modulelocator" />
        <constructor-arg ref="userDetailsService" />
    </bean>

    <!--
        property sources are concentrated in this file
    -->
    <import resource="main.conflocator.xml"/>

</beans>
