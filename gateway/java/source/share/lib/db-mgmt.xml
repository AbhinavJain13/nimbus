<?xml version="1.0"?>

<project default="dbprobe"
         basedir="."
         name="Nimbus Gateway DB build/management">

    <description>Nimbus Gateway DB build/management
    
        Must be called with these properties set:

        gateway.dbdir.prop        - toplevel dir to create under
        gateway.sqldir.prop       - dir with SQL database definition files
        derby.system.home.prop    - derby home dir to call IJ with
        derby.relative.dir.prop   - relative path from homedir where our dir is
        derby.classpath.dir.prop  - path to dir with derby jars
    </description>

    <property file="gateway.persistence.conf" />

    <path id="derby.classpath">
        <fileset dir="${derby.classpath.dir.prop}">
             <include name="*.jar"/>
        </fileset>
    </path>

    
    <!-- ***********************************************************************
         DEFAULT SETUP TARGET
         ******************************************************************* -->

    <target name="setupGatewayPersistence">

        <echo>Setting up Gateway persistence:</echo>
        <antcall target="createAccountingDB" />
        <echo>Set up Gateway persistence.</echo>

    </target>

    
    <!-- ***********************************************************************
         WIPE ALL STATE
         ******************************************************************* -->

    <target name="deleteAllPersistentData">
        <fail message="Must specify 'gateway.dbdir.prop' to delete"
              unless="gateway.dbdir.prop"/>
        <echo message="Deleting everything persisted under ${gateway.dbdir.prop}"/>
        <delete dir="${gateway.dbdir.prop}" />
    </target>
    
    
    <!-- ***********************************************************************
         ACCOUNTING DATABASE
         ******************************************************************* -->
    
    <!-- separate database for long term accounting, even over gateway/ec2client
         service version changes or configuration resets -->

    <target name="createAccountingDB"
            depends="allparamscheck, Accounting DB action"
            unless="accountingDB.present">

        <antcall target="make.persistence.dir" />

        <java classname="org.apache.derby.tools.ij" fork="true" >
            <jvmarg value="-Dderby.system.home.prop=${derby.system.home.prop}"/>
            <jvmarg value="-Dderby.infolog.append=true"/>
            <jvmarg value="-Dij.protocol=jdbc:derby:directory:${derby.system.home.prop}/"/>
            <jvmarg value="-Dij.database=${derby.relative.dir.prop}/EC2AccountingDB;create=true"/>
            <classpath refid="derby.classpath" />
            <arg value="${gateway.sqldir.prop}/ec2client_derby_schema.sql"/>
        </java>
    </target>

    <target name="Accounting DB action" depends="dbprobe">
        <echo message="${accountingDB.msg}"/>
    </target>

    <!-- resetAccountingDB is a convenience target in place so that
         the entire service does need to be redeployed to
         wipe the database. -->

    <target name="resetAccountingDB">
        <antcall target="deleteAccountingDB"/>
        <antcall target="createAccountingDB"/>
    </target>

    <target name="deleteAccountingDB">
        <fail message="Must specify 'gateway.dbdir.prop' to delete"
              unless="gateway.dbdir.prop"/>
        <echo message="Deleting database for gateway/EC2 accounting module"/>
        <delete dir="${gateway.dbdir.prop}/EC2AccountingDB"/>
    </target>

    <target name="dumpAccountingDB" depends="allparamscheck" >
        <echo message="Dumping accounting database to stdout"/>
        <java classname="org.apache.derby.tools.ij" fork="true" >
            <jvmarg value="-Dderby.system.home.prop=${derby.system.home.prop}"/>
            <jvmarg value="-Dderby.infolog.append=true"/>
            <jvmarg value="-Dij.protocol=jdbc:derby:directory:${derby.system.home.prop}/"/>
            <jvmarg value="-Dij.database=${derby.relative.dir.prop}/EC2AccountingDB;create=false"/>
            <classpath refid="derby.classpath" />
            <arg value="${gateway.sqldir.prop}/ec2client_derby_dump.sql"/>
        </java>
    </target>


    <!-- ***********************************************************************
         "SUBROUTINES"
         ******************************************************************* -->

    <target name="allparamscheck">

        <fail message="Must specify 'gateway.dbdir.prop' for this"
              unless="gateway.dbdir.prop"/>

        <fail message="Must specify 'gateway.sqldir.prop' for this"
              unless="gateway.sqldir.prop"/>

        <fail message="Must specify 'derby.system.home.prop' for this"
              unless="derby.system.home.prop"/>

        <fail message="Must specify 'derby.relative.dir.prop' for this"
              unless="derby.relative.dir.prop"/>

        <fail message="Must specify 'derby.classpath.dir.prop' for this"
              unless="derby.classpath.dir.prop"/>
        
    </target>

    <target name="make.persistence.dir">

        <fail message="Must specify 'gateway.dbdir.prop' to make persistence directory"
              unless="gateway.dbdir.prop"/>

        <mkdir dir="${gateway.dbdir.prop}" />

        <mkdir dir="${gateway.dbdir.prop}/caches" />

        <mkdir dir="${gateway.dbdir.prop}/tmpfiles" />

        <!-- chmod ant target does not work on directories... -->
        <exec executable="chmod">
            <arg value="700"/>
            <arg value="${gateway.dbdir.prop}"/>
        </exec>
        
        <echo message="Ensured owner-only rwx permissions on persistence directory"/>

    </target>

    <target name="dbprobe">

        <fail message="Must specify 'gateway.dbdir.prop' to probe for databases"
              unless="gateway.dbdir.prop"/>

        <available file="${gateway.dbdir.prop}/EC2AccountingDB"
                   type="dir"
                   property="accountingDB.present" />

        <condition property="accountingDB.msg"
                   value="Creating an embedded database for EC2 gateway accounting">
            <not>
                <isset property="accountingDB.present" />
            </not>
        </condition>

        <condition property="accountingDB.msg"
                   value="DB already present: not creating an embedded database for EC2 gateway accounting module">
            <isset property="accountingDB.present" />
        </condition>
    </target>
    
    
</project>